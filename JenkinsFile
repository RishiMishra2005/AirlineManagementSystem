pipeline {
	agent any
	environment {
	    IMAGE_NAME = 'eclipse-temurin:21-jdk'
	    EC2_USER = 'ec2-user'                // Amazon Linux default user
	    EC2_IP = '65.1.248.245'        // Replace this
	    PEM_KEY = 'C:/Users/ADMIN/Downloads/rishi.pem'    // Replace this (local path to your EC2 private key)
	}

	stages {
	    stage('Checkout') {
	        steps {
	            git url: 'https://github.com/RishiMishra2005/AirlineManagementSystem.git', branch: 'main'
	        }
	    }
	
	    stage('Build with Docker') {
		    steps {
			script {
			    def ws = pwd()
			    // Convert Windows drive letter path to Unix style
			    if (isUnix()) {
				// on Linux or WSL, pwd() is already correct
				docker.image("${IMAGE_NAME}").inside("-v ${ws}:${ws} -w ${ws}") {
				    sh 'mvn clean package'
				}
			    } else {
				// On Windows: Convert C:\... to /c/...
				def wsLinux = ws.replaceAll('^([a-zA-Z]):\\\\', '/$1/').replaceAll('\\\\', '/').toLowerCase()
				docker.image("${IMAGE_NAME}").inside("-v ${ws}:${wsLinux} -w ${wsLinux}") {
				    sh 'mvn clean package'
				}
			    }
			}
		    }
		}

	
	    stage('Test') {
	        steps {
	            script {
	                def ws = pwd()
	                docker.image("${IMAGE_NAME}").inside("-v ${ws}:${ws} -w ${ws}") {
	                    sh 'mvn test'
	                }
	            }
	        }
	    }
	
	    stage('Deploy to EC2') {
	        steps {
	            script {
	                def jarFile = sh(script: "ls target/*.jar", returnStdout: true).trim()
	                sh """
	                    chmod 400 ${PEM_KEY}
	                    scp -o StrictHostKeyChecking=no -i ${PEM_KEY} ${jarFile} ${EC2_USER}@${EC2_IP}:/home/${EC2_USER}/app.jar
	                    ssh -o StrictHostKeyChecking=no -i ${PEM_KEY} ${EC2_USER}@${EC2_IP} '
	                        pkill -f app.jar || true
	                        nohup java -jar /home/${EC2_USER}/app.jar > /home/${EC2_USER}/springboot.log 2>&1 &
	                    '
	                """
	            }
	        }
	    }
	}

	post {
	    success {
	        echo 'Deployment successful!'
	    }
	    failure {
	        echo 'Deployment failed.'
	    }
	}
}
